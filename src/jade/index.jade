extends ./layout.jade

block content

	section
		h1 Ansible
		h2 Remote configuration tool
		aside.notes Maybe mention that its name comes from a 
			a(href='https://en.wikipedia.org/wiki/Ansible') FTL communication device.

	section
		section
			h2 Typical developer
			h3 What do you configure?
			aside.notes What are your first steps on a new machine?

		section
			h3 For Example
			p Local development environment: IDE, Editor, SSH, Git
			p Virtual machines
			p Remote servers / Cloud instances
			p ...
		
	section
		section
			h2 Why use it?
			p.fragment Documentation
			p.fragment Repeatability
			p.fragment Reuse
			p.fragment OS abstraction

		section
			h2 Documentation
			p never forget
			ul
				li obscure settings
				li all installed packages
				li PHP extensions
				li permissions
					
		section
			h2 Repeatability
			p Run on multiple servers
			blockquote.fragment 
				strong Idempotence 
				span.fragment ... is the property of certain operations mathematic and in computer science, that can be applied multiple times without changing the result beyond the initial application.
				p Source:
					a(href='https://en.wikipedia.org/wiki/Idempotence') Wikipedia
			
		section
			h2 Reuse
			p Define different server roles - Database, Web, Proxy, etc.
			p Modularize your configuration to run differently, based on server role

		section
			h2 Repeatability != Automation
			p: img(src="http://imgs.xkcd.com/comics/automation.png")
			p Source: 
				a(href="https://xkcd.com/1319/") https://xkcd.com/1319/
			aside.notes If you are thinking "This will save me so much time!" ... you are probably wrong, but CM is not about automation.

		section
			h2 Really, don't do it for the automation 
			p: img(src="http://imgs.xkcd.com/comics/is_it_worth_the_time.png")
			p Except if you are a professional administrator who sets up 5 servers a day.
			p Source: 
				a(href="https://xkcd.com/1205/") https://xkcd.com/1205/

	section
		h2 Configuration management software is like unit tests for infrastructure
		aside.notes
			ul
				li Configuration describes how the system SHOULD work and look like
				li Unless you are bearded UNIX guru creating infrastructure is an iterative process (oh, must set this and install this package)
				li Gives you a safety net in case something horrible happens to a server

	section
		h2 Buzzword Time!
		h3: a(href='https://en.wikipedia.org/wiki/Infrastructure_as_Code') Infrastructure as code

	section
			h2 Put your configuration in version control!

	section
		h2 Other Software
		p Chef
		p Puppet
		p Salt
		p: a(href='https://en.wikipedia.org/wiki/Comparison_of_open-source_configuration_management_software') Many more ...

	section
		h2 Why Ansible
		p.fragment Agent-Less
		p.fragment Ordered execution
		p.fragment YAML syntax
		aside.notes Only SSH is needed on the target side, everything else needed by the playbooks (Python, git, unarchive utilities) can be bootstrapped

	section
		h2 Code Examples

	section
		h2 That's all!
		p Collection of links + the source of this presentation at
		p: a(href="https://github.com/gbirke/intro-to-ansible-presentation") https://github.com/gbirke/intro-to-ansible-presentation
			br
			img(src="img/qrcode.svg")

	section Legal Stuff
		p Presentation Code by reveal.js
